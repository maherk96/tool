{
  "info": {
    "_postman_id": "b645a828-a957-4d97-a13f-d944a20b6f99",
    "name": "SpringLoad API",
    "description": "Collection to test LoadTaskController API with OPEN and CLOSED load models, plus monitoring endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "7198409"
  },
  "item": [
    {
      "name": "Submit Task - OPEN Load Model",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"taskType\": \"REST_LOAD\",\n  \"data\": {\n    \"testSpec\": {\n      \"id\": \"open-model-demo\",\n      \"globalConfig\": {\n        \"baseUrl\": \"https://jsonplaceholder.typicode.com\",\n        \"headers\": { \"Content-Type\": \"application/json\" },\n        \"vars\": {},\n        \"timeouts\": {\n          \"connectionTimeoutMs\": 2000,\n          \"requestTimeoutMs\": 3000\n        }\n      },\n      \"scenarios\": [\n        {\n          \"name\": \"posts-and-users\",\n          \"requests\": [\n            { \"method\": \"GET\", \"path\": \"/posts/1\" },\n            { \"method\": \"GET\", \"path\": \"/users/1\" }\n          ]\n        }\n      ]\n    },\n    \"execution\": {\n      \"thinkTime\": { \"type\": \"RANDOM\", \"min\": 200, \"max\": 600 },\n      \"loadModel\": { \"type\": \"OPEN\", \"arrivalRatePerSec\": 10.0, \"maxConcurrent\": 4, \"duration\": \"5s\" },\n      \"globalSla\": { \"errorRatePct\": 5.0, \"p95LtMs\": 1200, \"onError\": { \"action\": \"STOP\" } }\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Submit Task - CLOSED Load Model",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"taskType\": \"REST_LOAD\",\n  \"data\": {\n    \"testSpec\": {\n      \"id\": \"closed-model-demo\",\n      \"globalConfig\": {\n        \"baseUrl\": \"https://jsonplaceholder.typicode.com\",\n        \"headers\": { \"Content-Type\": \"application/json\" },\n        \"vars\": {},\n        \"timeouts\": {\n          \"connectionTimeoutMs\": 2000,\n          \"requestTimeoutMs\": 3000\n        }\n      },\n      \"scenarios\": [\n        {\n          \"name\": \"posts-and-users\",\n          \"requests\": [\n            { \"method\": \"GET\", \"path\": \"/posts/1\" },\n            { \"method\": \"GET\", \"path\": \"/users/1\" }\n          ]\n        }\n      ]\n    },\n    \"execution\": {\n      \"thinkTime\": { \"type\": \"RANDOM\", \"min\": 200, \"max\": 600 },\n      \"loadModel\": { \"type\": \"CLOSED\", \"users\": 5, \"iterations\": 20, \"warmup\": \"5s\", \"rampUp\": \"10s\", \"holdFor\": \"20s\" },\n      \"globalSla\": { \"errorRatePct\": 5.0, \"p95LtMs\": 1200, \"onError\": { \"action\": \"STOP\" } }\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get All Tasks",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Task Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            "{{taskId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Task Metrics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}/metrics",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            "{{taskId}}",
            "metrics"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Task Report",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}/report",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            "{{taskId}}",
            "report"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Cancel Task",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            "{{taskId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Supported Task Types",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/types",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            "types"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Queue Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/queue",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            "queue"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Task History",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/history",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            "history"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/health",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            "health"
          ]
        }
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8012/api"
    },
    {
      "key": "taskId",
      "value": ""
    }
  ]
}